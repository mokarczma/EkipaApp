@model Ekipa.Models.ViewModel.Company.CompanyTermsVM

@{
	ViewBag.Title = "CompanyTerm";
	int counter = 0;
	Ekipa.Models.ViewModel.Company.CompanyTermVM createTerm = new Ekipa.Models.ViewModel.Company.CompanyTermVM();

}
@if (null != TempData["alertMessage"])
{
	<script type="text/javascript">
			   alert("@TempData["alertMessage"]");
	</script>
}

<div class=" row">

	<div class="col-md-2">
		<h2>Terminy</h2>
	</div>
	<div class="col-md-2">
		<div class="color-red term text-center white"> Zarezerwowane</div>
	</div>
	<div class="col-md-2">
		<div class="color-yellow term text-center white "> Do akceptacji</div>
	</div>
	<div class="col-md-2">
		<div class="color-green term text-center white"> Wolne terminy</div>
	</div>
</div>
<hr />

@if (ViewBag.NoTerm == true)
{
	<div>Nie dodałeś jeszcze żadnych terminów </div>
}
else
{
	<div class="row">

		@for (int i = 0; i < Model.CompanyTermsList.Count(); i++)
		{
			if (counter != 0 && counter % 6 == 0)
			{
				@:</div>
			<hr />
			@:<div class="row">
			}
			if (Model.CompanyTermsList[i].Actual)
			{
				<div class="col-md-2">

					@if (Model.CompanyTermsList[i].CustomerID != null)
					{
						if (Model.CompanyTermsList[i].Accepted == true)
						{
								<a class="btn term-red text-center " href='@Url.Action("CompanyReservation", "Reservation", new RouteValueDictionary(  new { id = Model.CompanyTermsList[i].ID}), null)'>
									<div>@Html.DisplayFor(model => model.CompanyTermsList[i].Start) -
									@Html.DisplayFor(model => model.CompanyTermsList[i].Stop)</div>
									Zobacz
								</a>

							counter++;
						}
						else
						{
							<a class="btn term-yellow text-center " href='@Url.Action("CompanyReservation", "Reservation", new RouteValueDictionary(  new { id = Model.CompanyTermsList[i].ID}), null)'>
									<div>@Html.DisplayFor(model => model.CompanyTermsList[i].Start) -
									@Html.DisplayFor(model => model.CompanyTermsList[i].Stop)</div>
									Zaakceptuj
							</a>
							counter++;
						}
					}
					else
					{
							<a class="btn term-green text-center" href='@Url.Action("DeleteTerm", "Company", new RouteValueDictionary(  new { id = Model.CompanyTermsList[i].ID}), null)'>
								<div>@Html.DisplayFor(model => model.CompanyTermsList[i].Start) -
								@Html.DisplayFor(model => model.CompanyTermsList[i].Stop)</div>
						     	Usuń
							</a>
						counter++;
					}
				</div>
			}
		}
	</div>
		<a href="~/Reservation/MyReservation" class="btn  search-button my-2 allRes">Zobacz wszystkie Twoje rezerwacje</a>

	<hr />
	@Html.Partial("~/Views/Term/_TermCreate.cshtml", createTerm)
}


<style>

	.term-red {
		border-radius: 6px;
		padding: 4px;
		box-sizing: border-box;
		width: 95%;
		height:65px;
		color: white;
		background-color: #ae281c;
	}

	.term-red:hover {
		background: transparent;
		border: 1px solid #ae281c;
		color: black;
	}
	.term-yellow {
		border-radius: 6px;
		padding: 4px;
		box-sizing: border-box;
		width: 95%;
		height: 65px;
		color: white;
		background-color: #f19f17;
	}

	.term-yellow:hover {
		background: transparent;
		border: 1px solid #f19f17;
		color: black;
	}
	.term-green {
		border-radius: 6px;
		padding: 4px;
		box-sizing: border-box;
		width: 95%;
		height: 65px;
		color: white;
		background-color: #76af24;
	}
	.term-green:hover {
		background: transparent;
		border: 1px solid #76af24;
		color: black;
	}
	.allRes {
		width: 99.5%;
	}
</style>
